apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: secrel-pipeline-configuration
  title: Secrel Pipeline Configuration
  description: Generates the config file necessary to run SecRel and build your application. Pushed PR to GitHub repository. 
spec:
  owner: jnkansah-va
  type: service

  parameters:
    - title: GitHub Repository Settings
      type: object
      required: 
        - repo
        - defaultBranch
        - images
      properties:
        repo:
          title: Repository Name
          type: string
        defaultBranch:
          title: Default Branch Name (e.g., main, master)
          type: string
          default: main
        images:
          type: array
          title: Docker Images
          items:
            type: string

    - title: Select Application Language
      required:
        - language
      properties:
        language:
          title: Select language
          type: string
          enum:
            - Python
            - Java
            - Javascript
            - Ruby

    - title: Python Settings
      type: object
      properties:
        pythonVersion:
          type: string
          title: Python Version
        pythonRequirements:
          type: array
          title: Path to requirements.txt
          items:
            type: string
    - title: Java Settings
      type: object
      properties:
        javaVersion:
          type: string
          title: Java Version
        javaPackageManager:
          type: string
          title: Java Package Manager
        javaBuildArgs:
          type: array
          title: Args to pass to package manager
          items:
            type: string

    - title: JavaScript Settings
      type: object
      properties:
        javascriptVersion:
          type: string
          title: Javascript Version
        javascriptPackageManager:
          type: string
          title: Javascript Package Manager
        javascriptPackageManagerVersion:
          type: string
          title: Version of Javascript package manager
        javascriptEnv:
          type: array
          title: Environmental variables used by package manager
          items:
            type: string
        javascriptBuildArgs:
          type: array
          title: Args to pass to package manager
          items:
            type: string
        javascriptPaths:
          type: array
          title: Paths to dependencies
          items:
            type: string

    - title: Ruby Settings
      type: object
      properties:
        rubyVersion:
          type: string
          title: Ruby Version
        rubyPaths:
          type: array
          title: Path to gemfiles
          items:
            type: string
    

  steps:
    - id: fetch-config-template
      name: Generate Config File
      action: fetch:template:file
      input:
        url: ./skeleton/config.yml
        targetPath: ./.github/secrel/config.yml
        values:
          language: ${{ parameters.language }}
          python:
            version: ${{ parameters.pythonVersion }}
            requirements: ${{ parameters.pythonRequirements }}
          java: 
            version: ${{ parameters.javaVersion }}
            packageManager: ${{ parameters.javaPackageManager }}
            buildArgs: ${{ parameters.javaBuildArgs }}
          javascript:
            version: ${{ parameters.javascriptVersion }}
            packageManager: ${{ parameters.javascriptPackageManager}}
            packageManagerVersion: ${{ parameters.javascriptPackageManagerVersion }}
            env: ${{ parameters.javascriptEnv }}
            buildArgs: ${{ parameters.javascriptBuildArgs }}
            paths: ${{ parameters.javascriptPaths }}
          ruby:
            version: ${{ parameters.rubyVersion }}
            paths: ${{ parameters.rubyPaths }}
  
    - id: fetch-secrel-template
      name: Generate SecRel Reusable Workflow File
      action: fetch:template:file
      input:
        url: ./skeleton/secrel.yml
        targetPath: ./.github/workflows/secrel.yml
        values:
          defaultBranch: ${{ parameters.defaultBranch }}
          images: ${{ parameters.images }}

    - id: fetch-dora-template
      name: Generate DORA Reusable Workflow File
      action: fetch:template:file
      input:
        url: ./skeleton/dora-lead-time-for-changes.yml
        targetPath: ./.github/workflows/dora-lead-time-for-changles.yml

    - id: publish-to-github
      name: Create PR
      action: publish:github:pull-request
      input:
        repo: ${{ parameters.repo }}
        title: SecRel Pipeline Configuration
        targetBranch: ${{ parameters.defaultBranch }}
        sourceBranch: "lhdi-onboarding-${{ execution.id }}"

  output:
    links:
      - title: View config in PR
        path: ./.github/secrel/config.yml
      - title: View SecRel Workflow in PR
        path: ./.github/workflows/secrel.yml